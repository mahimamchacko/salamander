<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Salamander | Dashboard</title>

    <link rel="stylesheet" href="/css/style.css" />
    <link rel="stylesheet" href="/css/dashboard.css" />
    <style>
      form {
        div {
          margin: 1rem 0px;
          width: 30%;
        }

        #images-preview:empty::after {
          display: none;
        }

        #images-preview:not(:empty) {
          height: 100px;
          width: 100%;
          overflow-x: auto;

          display: flex;
          align-items: center;
          justify-content: flex-start;
          gap: 1.5rem;

          background-color: lightgray;
        }

        img {
          object-fit: cover;
          height: 100%;
        }

        input,
        textarea {
          width: 100%;
        }

        textarea {
          height: 2rem;
        }

        label {
          display: block;
          margin-bottom: 0.5rem;
        }

        label span {
          display: block;
        }

        label .instruction {
          font-weight: bold;
        }

        label .description {
          font-style: italic;
          color: grey;
        }

        div#action-div {
          margin-top: 2rem;
          display: flex;
          justify-content: space-between;
          align-items: center;
        }

        button {
          padding: 0.25rem 0.75rem;
        }
      }
    </style>
  </head>

  <body>
    <%- include("../partials/navbar") %>

    <section id="dashboard">
      <%- include("../partials/sidebar") %>

      <section id="content">
        <div class="section-header">
          <h3>Add New Product</h3>
        </div>

        <form id="form" autocomplete="off">
          <div>
            <label for="name">
              <span class="instruction">
                1.Enter the name of your product:
              </span>
              <span class="description">
                Product name must be 1-100 characters.
              </span>
            </label>
            <input
              type="text"
              id="name"
              name="name"
              minlength="1"
              maxlength="100"
              required
            />
          </div>

          <div>
            <label for="desc">
              <span class="instruction">
                2. Enter a description of your product:
              </span>
              <span class="description"> Optional. </span>
            </label>
            <textarea id="desc" name="desc"></textarea>
          </div>

          <div id="images-div">
            <label for="images">
              <span class="instruction">
                3. Upload images of your product:
              </span>
              <span class="description">
                Only image files are allowed. <br />
                Upload at least 1 image, up to 5 images. <br />
                Upload in the order you want the images to be viewed. The first
                image will be the thumbnail of the product.
              </span>
            </label>
            <input
              type="file"
              id="images"
              name="images"
              accept="image/*"
              multiple
              required
            />

            <div id="images-preview"></div>
          </div>

          <div>
            <label for="price">
              <span class="instruction">
                4. Enter a minimum bid price for your product:
              </span>
              <span class="description">
                The minimum price must be at least $ 0.01.
              </span>
            </label>
            <input
              type="text"
              id="price"
              name="price"
              inputmode="numeric"
              pattern="^\d+(\.\d{2})?"
              value="0.01"
              required
            />
          </div>

          <div>
            <label for="start">
              <span class="instruction">
                5. Enter the time for your auction to open:
              </span>
            </label>
            <% 
              let now = new Date(); now.setMinutes(now.getMinutes());
              let localDate = now.toLocaleString('en-GB', { timeZone: 'EST' }).split(', ')[0].split('/').reverse().join('-');
              let hours = String(now.getHours()).padStart(2, '0');
              let minutes = String(now.getMinutes()).padStart(2, '0');
              let formattedDate = `${localDate}T${hours}:${minutes}`;
            %>
            <input
              type="datetime-local"
              id="start"
              name="start"
              value="<%= formattedDate %>"
              min="<%= formattedDate %>"
              required
            />
          </div>

          <div>
            <label for="end">
              <span class="instruction">
                6. Enter the time for your auction to close:
              </span>
              <span class="description">
                The auction must last at least 1 minute.
              </span>
            </label>
            <% 
              now.setMinutes(now.getMinutes() + 1); 
              minutes = String(now.getMinutes()).padStart(2, '0');
              formattedDate = `${localDate}T${hours}:${minutes}`;
            %>
            <input
              type="datetime-local"
              id="end"
              name="end"
              value="<%= formattedDate %>"
              min="<%= formattedDate %>"
              required
            />
          </div>

          <div id="action-div">
            <a href="/account/dashboard">Cancel</a>
            <button type="submit" id="submit">Add Product</button>
          </div>
        </form>
      </section>
    </section>

    <script>
      let startInput = document.getElementById("start");
      let endInput = document.getElementById("end");

      startInput.addEventListener("input", () => {
        let startDate = new Date(startInput.value);
        if (!isNaN(startDate)) {
          let minEndDate = new Date(startDate);
          minEndDate.setMinutes(minEndDate.getMinutes() + 1);
          let localDate = minEndDate.toLocaleString('en-GB', { timeZone: 'EST' }).split(', ')[0].split('/').reverse().join('-');
          let hours = String(minEndDate.getHours()).padStart(2, '0');
          let minutes = String(minEndDate.getMinutes()).padStart(2, '0');
          let formattedDate = `${localDate}T${hours}:${minutes}`;
          endInput.min = formattedDate;
        }
      });

      let imagesInput = document.getElementById("images");
      let imagesPreview = document.getElementById("images-preview");

      let imageReader = new FileReader();
      imageReader.addEventListener("load", (event) => {
        let image = document.createElement("img");
        image.src = event.target.result;
        imagesPreview.append(image);
      });

      imagesInput.addEventListener("change", async (event) => {
        imagesPreview.innerHTML = "";
        imagesInput.disabled = true;

        let files = event.target.files;
        for (let file of files) {
          let imageReader = new FileReader();

          imageReader.addEventListener("load", (event) => {
            let image = document.createElement("img");
            image.src = event.target.result;
            imagesPreview.append(image);
          });

          await imageReader.readAsDataURL(file);
        }

        imagesInput.disabled = false;
      });
    </script>

    <script>
      let form = document.getElementById("form");

      form.addEventListener("submit", (event) => {
        event.preventDefault();
        let formData = new FormData(form);

        for (let input of form.querySelectorAll("input, textarea, button")) {
          input.disabled = true;
        }

        fetch("/market/add", {
          method: "POST",
          body: formData,
        })
          .then((response) => {
            if (response.status === 200) {
              window.location.href = response.url;
            }
          })
          .catch((error) => {
            console.log(error);
          })
          .finally(() => {
            for (let input of form.querySelectorAll(
              "input, textarea, button"
            )) {
              input.disabled = false;
            }
          });
      });
    </script>
  </body>
</html>
